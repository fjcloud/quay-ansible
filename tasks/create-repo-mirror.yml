---

- name: "Sync images"
  hosts: localhost
  gather_facts: yes
  vars:
    QUAY_AUTH_TOKEN: ""
    QUAY_ENDPOINT: ""
    NAMESPACE: ""
    IMAGE: ""
    IMAGE_NAME: ""
    EXTERNAL_REGISTRY: "registry.redhat.io"
    ROBOT_ACCOUNT: ""
    TAGS: ""
    USERNAME: ""
    PASSWORD: ""
  tasks:
    - name: Check repository status
      uri:
        url: "https://{{ QUAY_ENDPOINT }}/api/v1/repository/{{ NAMESPACE }}/{{ IMAGE_NAME }}"
        method: GET
        headers:
          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
        validate_certs: no
        body_format: json
        status_code:
          - 200
          - 404
      register: result_repo

    - name: Create repository
      uri:
        url: "https://{{ QUAY_ENDPOINT }}/api/v1/repository"
        method: POST
        headers:
          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
        validate_certs: no
        body_format: json
        status_code: 201
        body:
          repo_kind: 'image'
          namespace: "{{ NAMESPACE }}"
          visibility: 'public'
          repository: "{{ IMAGE_NAME }}"
          description: ''
      when: result_repo.status == 404

    - name: Check mirror status
      uri:
        url: "https://{{ QUAY_ENDPOINT }}/api/v1/repository/{{ NAMESPACE }}/{{ IMAGE_NAME }}/mirror"
        method: GET
        headers:
          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
        validate_certs: no
        body_format: json
        status_code:
          - 200
          - 404
      register: result_mirror

    - name: Create mirror
      uri:
        url: "https://{{ QUAY_ENDPOINT }}/api/v1/repository/{{ NAMESPACE}}/{{ IMAGE_NAME }}/mirror"
        method: POST
        headers:
          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
        validate_certs: no
        body_format: json
        status_code: 201
        body:
          is_enabled: true
          external_registry_config:
            proxy:
              https_proxy: ""
              http_proxy: ""
              no_proxy: ""
            verify_tls: false
          external_reference: "{{ EXTERNAL_REGISTRY }}/{{ IMAGE }}"
          sync_start_date: "{{ ansible_date_time['iso8601'] }}"
          root_rule:
            rule_kind: "tag_glob_csv"
            rule_value:
              "{{ TAGS }}"
          external_registry_username: "{{ USERNAME }}"
          external_registry_password: "{{ PASSWORD }}"
          sync_interval: 86400
          robot_username: "{{ ROBOT_ACCOUNT }}"
      when: result_mirror.status == 404

    - name: Modify mirror
      uri:
        url: "https://{{ QUAY_ENDPOINT }}/api/v1/repository/{{ NAMESPACE}}/{{ IMAGE_NAME }}/mirror"
        method: PUT
        headers:
          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
        validate_certs: no
        body_format: json
        status_code: 201
        body:
          root_rule:
            rule_kind: "tag_glob_csv"
            rule_value:
              "{{ TAGS }}"
      when: 
        - result_mirror.status == 200
        - result_mirror.json.root_rule.rule_value != TAGS
